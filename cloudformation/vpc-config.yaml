AWSTemplateFormatVersion: 2010-09-09 
Description: Vandenberg AFB Regional Weather Data Product networking configuration
Resources: 
  VPC: 
    Type: AWS::EC2::VPC 
    Properties: 
      CidrBlock: 10.0.0.0/16 
      EnableDnsSupport: true 
      EnableDnsHostnames: true 
      InstanceTenancy: default 
      Tags: 
      - Key: Name
        Value: rwdp-vpc

  # InternetGateway Setup
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
       VpcId: !Ref VPC
       InternetGatewayId: !Ref InternetGateway

  # Establish Public Subnet 
  PublicSubnet1: 
    Type: AWS::EC2::Subnet 
    Properties: 
      VpcId: !Ref VPC 
      CidrBlock: 10.0.10.0/24 
      MapPublicIpOnLaunch: true 
      AvailabilityZone: "us-gov-west-1a" 
      Tags: 
      - Key: Name 
        Value: !Join ['', ['PublicSubnet1 - ', !Ref 'AWS::StackName'] ] 
      - Key: SubnetType 
        Value: Public 
  
  PublicSubnet2: 
    Type: AWS::EC2::Subnet 
    Properties: 
      VpcId: !Ref VPC 
      CidrBlock: 10.0.12.0/24 
      MapPublicIpOnLaunch: true 
      AvailabilityZone: "us-gov-west-1b" 
      Tags: 
      - Key: Name 
        Value: !Join ['', ['PublicSubnet2 - ', !Ref 'AWS::StackName'] ] 
      - Key: SubnetType 
        Value: Public 
  
  PublicSubnet3:
   Type: AWS::EC2::Subnet
   Properties:
     VpcId: !Ref VPC
     CidrBlock: 10.0.13.0/24
     MapPublicIpOnLaunch: true
     AvailabilityZone: "us-gov-west-1c"
     Tags:
     - Key: Name
       Value: !Join ['', ['PublicSubnet3 - ', !Ref 'AWS::StackName'] ]
     - Key: SubnetType
       Value: Public

  # Establish Private Database Subnet 
  PrivateSubnet1: 
     Type: AWS::EC2::Subnet 
     Properties: 
       VpcId: !Ref VPC 
       CidrBlock: 10.0.31.0/24 
       MapPublicIpOnLaunch: false 
       AvailabilityZone: "us-gov-west-1a" 
       Tags: 
       - Key: Name 
         Value: !Join ['', ['PrivateSubnet1 - ', !Ref 'AWS::StackName'] ] 
       - Key: SubnetType 
         Value: Private 
  
  PrivateSubnet2: 
     Type: AWS::EC2::Subnet 
     Properties: 
       VpcId: !Ref VPC 
       CidrBlock: 10.0.32.0/24 
       MapPublicIpOnLaunch: false 
       AvailabilityZone: "us-gov-west-1b" 
       Tags: 
       - Key: Name 
         Value: !Join ['', ['PrivateSubnet2 - ', !Ref 'AWS::StackName'] ]
       - Key: SubnetType 
         Value: Private
  
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.33.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: "us-gov-west-1c"
      Tags:
      - Key: Name
        Value: !Join ['', ['PrivateSubnet3 - ', !Ref 'AWS::StackName'] ]
      - Key: SubnetType
        Value: Private

  # Public Route/RouteTable
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteTable:
     Type: AWS::EC2::RouteTable
     Properties:
       VpcId: !Ref VPC
       Tags:
         - Key: Name
           Value: !Join ['', ['PublicRouteTable - ', !Ref 'AWS::StackName'] ]
         - Key: Network
           Value: Public

  # Public Subnet RouteTable Association
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda-associated security group to give functions access to an RDS instance.
      GroupName: SecurityGroup
      Tags: 
        - Key: Name 
          Value: !Join ['', ['SecurityGroup - ', !Ref 'AWS::StackName'] ]
      VpcId: !Ref VPC

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: security group for the RDS instance.
      GroupName: DatabaseSecurityGroup
      SecurityGroupIngress: 
        -
          Description: connection to database security group
          FromPort: 3306
          ToPort: 3306
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref LambdaSecurityGroup
      Tags: 
        - Key: Name 
          Value: !Join ['', ['DatabaseSecurityGroup - ', !Ref 'AWS::StackName'] ]
      VpcId: !Ref VPC